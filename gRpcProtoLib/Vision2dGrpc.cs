// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Vision2d.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace App2D {
  public static partial class Robot2dApp
  {
    static readonly string __ServiceName = "App2D.Robot2dApp";

    static readonly grpc::Marshaller<global::App2D.TriggerReq> __Marshaller_TriggerReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::App2D.TriggerReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SetFlag> __Marshaller_SetFlag = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SetFlag.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::App2D.LocalizeReq> __Marshaller_LocalizeReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::App2D.LocalizeReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::App2D.LocalizeRep> __Marshaller_LocalizeRep = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::App2D.LocalizeRep.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::App2D.CalibReq> __Marshaller_CalibReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::App2D.CalibReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::App2D.ConfigReq> __Marshaller_ConfigReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::App2D.ConfigReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::App2D.WorkObjReq> __Marshaller_WorkObjReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::App2D.WorkObjReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::App2D.WorkObjRep> __Marshaller_WorkObjRep = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::App2D.WorkObjRep.Parser.ParseFrom);

    static readonly grpc::Method<global::App2D.TriggerReq, global::SetFlag> __Method_triggerCamera = new grpc::Method<global::App2D.TriggerReq, global::SetFlag>(
        grpc::MethodType.Unary,
        __ServiceName,
        "triggerCamera",
        __Marshaller_TriggerReq,
        __Marshaller_SetFlag);

    static readonly grpc::Method<global::App2D.LocalizeReq, global::App2D.LocalizeRep> __Method_getLocalizeResult = new grpc::Method<global::App2D.LocalizeReq, global::App2D.LocalizeRep>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getLocalizeResult",
        __Marshaller_LocalizeReq,
        __Marshaller_LocalizeRep);

    static readonly grpc::Method<global::App2D.CalibReq, global::SetFlag> __Method_doCalibrate = new grpc::Method<global::App2D.CalibReq, global::SetFlag>(
        grpc::MethodType.Unary,
        __ServiceName,
        "doCalibrate",
        __Marshaller_CalibReq,
        __Marshaller_SetFlag);

    static readonly grpc::Method<global::App2D.ConfigReq, global::SetFlag> __Method_configSystem = new grpc::Method<global::App2D.ConfigReq, global::SetFlag>(
        grpc::MethodType.Unary,
        __ServiceName,
        "configSystem",
        __Marshaller_ConfigReq,
        __Marshaller_SetFlag);

    static readonly grpc::Method<global::App2D.WorkObjReq, global::App2D.WorkObjRep> __Method_getWorkObjInfo = new grpc::Method<global::App2D.WorkObjReq, global::App2D.WorkObjRep>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getWorkObjInfo",
        __Marshaller_WorkObjReq,
        __Marshaller_WorkObjRep);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::App2D.Vision2DReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Robot2dApp</summary>
    public abstract partial class Robot2dAppBase
    {
      public virtual global::System.Threading.Tasks.Task<global::SetFlag> triggerCamera(global::App2D.TriggerReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::App2D.LocalizeRep> getLocalizeResult(global::App2D.LocalizeReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SetFlag> doCalibrate(global::App2D.CalibReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SetFlag> configSystem(global::App2D.ConfigReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::App2D.WorkObjRep> getWorkObjInfo(global::App2D.WorkObjReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Robot2dApp</summary>
    public partial class Robot2dAppClient : grpc::ClientBase<Robot2dAppClient>
    {
      /// <summary>Creates a new client for Robot2dApp</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public Robot2dAppClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Robot2dApp that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public Robot2dAppClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected Robot2dAppClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected Robot2dAppClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::SetFlag triggerCamera(global::App2D.TriggerReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return triggerCamera(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SetFlag triggerCamera(global::App2D.TriggerReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_triggerCamera, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SetFlag> triggerCameraAsync(global::App2D.TriggerReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return triggerCameraAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SetFlag> triggerCameraAsync(global::App2D.TriggerReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_triggerCamera, null, options, request);
      }
      public virtual global::App2D.LocalizeRep getLocalizeResult(global::App2D.LocalizeReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getLocalizeResult(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::App2D.LocalizeRep getLocalizeResult(global::App2D.LocalizeReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getLocalizeResult, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::App2D.LocalizeRep> getLocalizeResultAsync(global::App2D.LocalizeReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getLocalizeResultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::App2D.LocalizeRep> getLocalizeResultAsync(global::App2D.LocalizeReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getLocalizeResult, null, options, request);
      }
      public virtual global::SetFlag doCalibrate(global::App2D.CalibReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return doCalibrate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SetFlag doCalibrate(global::App2D.CalibReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_doCalibrate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SetFlag> doCalibrateAsync(global::App2D.CalibReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return doCalibrateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SetFlag> doCalibrateAsync(global::App2D.CalibReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_doCalibrate, null, options, request);
      }
      public virtual global::SetFlag configSystem(global::App2D.ConfigReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return configSystem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SetFlag configSystem(global::App2D.ConfigReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_configSystem, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SetFlag> configSystemAsync(global::App2D.ConfigReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return configSystemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SetFlag> configSystemAsync(global::App2D.ConfigReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_configSystem, null, options, request);
      }
      public virtual global::App2D.WorkObjRep getWorkObjInfo(global::App2D.WorkObjReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getWorkObjInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::App2D.WorkObjRep getWorkObjInfo(global::App2D.WorkObjReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getWorkObjInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::App2D.WorkObjRep> getWorkObjInfoAsync(global::App2D.WorkObjReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getWorkObjInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::App2D.WorkObjRep> getWorkObjInfoAsync(global::App2D.WorkObjReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getWorkObjInfo, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override Robot2dAppClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new Robot2dAppClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(Robot2dAppBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_triggerCamera, serviceImpl.triggerCamera)
          .AddMethod(__Method_getLocalizeResult, serviceImpl.getLocalizeResult)
          .AddMethod(__Method_doCalibrate, serviceImpl.doCalibrate)
          .AddMethod(__Method_configSystem, serviceImpl.configSystem)
          .AddMethod(__Method_getWorkObjInfo, serviceImpl.getWorkObjInfo).Build();
    }

  }
}
#endregion
